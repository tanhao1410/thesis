<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.tanhao1410.thesis.common.mapper.MonitoringItemDOMapper">
  <resultMap id="BaseResultMap" type="com.github.tanhao1410.thesis.common.domain.MonitoringItemDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="rule_id" jdbcType="BIGINT" property="ruleId" />
    <result column="monitoring_method" jdbcType="VARCHAR" property="monitoringMethod" />
    <result column="threshold" jdbcType="VARCHAR" property="threshold" />
    <result column="param" jdbcType="VARCHAR" property="param" />
    <result column="alarm_condition" jdbcType="VARCHAR" property="alarmCondition" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="interval_time" jdbcType="INTEGER" property="intervalTime" />
    <result column="need_mail" jdbcType="BIT" property="needMail" />
    <result column="is_alarm" jdbcType="BIT" property="isAlarm" />
  </resultMap>
  <sql id="Base_Column_List">
    id, item_name, device_id, rule_id, monitoring_method, threshold, param, alarm_condition, 
    level, interval_time, need_mail, is_alarm
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from monitoring_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from monitoring_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.github.tanhao1410.thesis.common.domain.MonitoringItemDO">
    insert into monitoring_item (id, item_name, device_id, 
      rule_id, monitoring_method, threshold, 
      param, alarm_condition, level, 
      interval_time, need_mail, is_alarm
      )
    values (#{id,jdbcType=BIGINT}, #{itemName,jdbcType=VARCHAR}, #{deviceId,jdbcType=BIGINT}, 
      #{ruleId,jdbcType=BIGINT}, #{monitoringMethod,jdbcType=VARCHAR}, #{threshold,jdbcType=VARCHAR}, 
      #{param,jdbcType=VARCHAR}, #{alarmCondition,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{intervalTime,jdbcType=INTEGER}, #{needMail,jdbcType=BIT}, #{isAlarm,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.tanhao1410.thesis.common.domain.MonitoringItemDO">
    insert into monitoring_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="monitoringMethod != null">
        monitoring_method,
      </if>
      <if test="threshold != null">
        threshold,
      </if>
      <if test="param != null">
        param,
      </if>
      <if test="alarmCondition != null">
        alarm_condition,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="intervalTime != null">
        interval_time,
      </if>
      <if test="needMail != null">
        need_mail,
      </if>
      <if test="isAlarm != null">
        is_alarm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="monitoringMethod != null">
        #{monitoringMethod,jdbcType=VARCHAR},
      </if>
      <if test="threshold != null">
        #{threshold,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="alarmCondition != null">
        #{alarmCondition,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="intervalTime != null">
        #{intervalTime,jdbcType=INTEGER},
      </if>
      <if test="needMail != null">
        #{needMail,jdbcType=BIT},
      </if>
      <if test="isAlarm != null">
        #{isAlarm,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.tanhao1410.thesis.common.domain.MonitoringItemDO">
    update monitoring_item
    <set>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="ruleId != null">
        rule_id = #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="monitoringMethod != null">
        monitoring_method = #{monitoringMethod,jdbcType=VARCHAR},
      </if>
      <if test="threshold != null">
        threshold = #{threshold,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="alarmCondition != null">
        alarm_condition = #{alarmCondition,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="intervalTime != null">
        interval_time = #{intervalTime,jdbcType=INTEGER},
      </if>
      <if test="needMail != null">
        need_mail = #{needMail,jdbcType=BIT},
      </if>
      <if test="isAlarm != null">
        is_alarm = #{isAlarm,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.tanhao1410.thesis.common.domain.MonitoringItemDO">
    update monitoring_item
    set item_name = #{itemName,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=BIGINT},
      rule_id = #{ruleId,jdbcType=BIGINT},
      monitoring_method = #{monitoringMethod,jdbcType=VARCHAR},
      threshold = #{threshold,jdbcType=VARCHAR},
      param = #{param,jdbcType=VARCHAR},
      alarm_condition = #{alarmCondition,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      interval_time = #{intervalTime,jdbcType=INTEGER},
      need_mail = #{needMail,jdbcType=BIT},
      is_alarm = #{isAlarm,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCountSelective" resultType="java.lang.Long">
    select count(1) from monitoring_item
    <where>
      <if test="record.itemName != null">
         and item_name = #{record.itemName,jdbcType=VARCHAR}
      </if>
      <if test="record.deviceId != null">
         and device_id = #{record.deviceId,jdbcType=BIGINT}
      </if>
      <if test="record.ruleId != null">
         and rule_id = #{record.ruleId,jdbcType=BIGINT}
      </if>
      <if test="record.monitoringMethod != null">
         and monitoring_method = #{record.monitoringMethod,jdbcType=VARCHAR}
      </if>
      <if test="record.threshold != null">
         and threshold = #{record.threshold,jdbcType=VARCHAR}
      </if>
      <if test="record.param != null">
         and param = #{record.param,jdbcType=VARCHAR}
      </if>
      <if test="record.alarmCondition != null">
         and alarm_condition = #{record.alarmCondition,jdbcType=VARCHAR}
      </if>
      <if test="record.level != null">
         and level = #{record.level,jdbcType=INTEGER}
      </if>
      <if test="record.intervalTime != null">
         and interval_time = #{record.intervalTime,jdbcType=INTEGER}
      </if>
      <if test="record.needMail != null">
         and need_mail = #{record.needMail,jdbcType=BIT}
      </if>
      <if test="record.isAlarm != null">
         and is_alarm = #{record.isAlarm,jdbcType=BIT}
      </if>
    </where>
  </select>
  <select id="selectPageSelective" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from monitoring_item
    <where>
      <if test="record.itemName != null">
         and item_name = #{record.itemName,jdbcType=VARCHAR}
      </if>
      <if test="record.deviceId != null">
         and device_id = #{record.deviceId,jdbcType=BIGINT}
      </if>
      <if test="record.ruleId != null">
         and rule_id = #{record.ruleId,jdbcType=BIGINT}
      </if>
      <if test="record.monitoringMethod != null">
         and monitoring_method = #{record.monitoringMethod,jdbcType=VARCHAR}
      </if>
      <if test="record.threshold != null">
         and threshold = #{record.threshold,jdbcType=VARCHAR}
      </if>
      <if test="record.param != null">
         and param = #{record.param,jdbcType=VARCHAR}
      </if>
      <if test="record.alarmCondition != null">
         and alarm_condition = #{record.alarmCondition,jdbcType=VARCHAR}
      </if>
      <if test="record.level != null">
         and level = #{record.level,jdbcType=INTEGER}
      </if>
      <if test="record.intervalTime != null">
         and interval_time = #{record.intervalTime,jdbcType=INTEGER}
      </if>
      <if test="record.needMail != null">
         and need_mail = #{record.needMail,jdbcType=BIT}
      </if>
      <if test="record.isAlarm != null">
         and is_alarm = #{record.isAlarm,jdbcType=BIT}
      </if>
      <if test="pageable.sort != null">
         order by 
        <foreach collection="pageable.sort" item="order" separator=",">
          <if test="order.property == 'id' || order.property == 'item_name'  || order.property == 'device_id'  || order.property == 'rule_id'  || order.property == 'monitoring_method'  || order.property == 'threshold'  || order.property == 'param'  || order.property == 'alarm_condition'  || order.property == 'level'  || order.property == 'interval_time'  || order.property == 'need_mail'  || order.property == 'is_alarm' ">
             ${order.property} ${order.direction} 
          </if>
        </foreach>
      </if>
      <if test="pageable.offset >= 0 and pageable.pageSize > 0">
        limit ${pageable.offset}, ${pageable.pageSize}
      </if>
    </where>
  </select>
  <update id="batchDeleteByPrimaryKey" parameterType="java.util.List">
    update monitoring_item set isactive = 0 where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       ${item} 
    </foreach>
    and isactive = 1
  </update>
  <insert id="insertSelectiveReturnPrimaryKey" parameterType="com.github.tanhao1410.thesis.common.domain.MonitoringItemDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID() as id
    </selectKey>
    insert into monitoring_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemName != null">
        item_name,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="monitoringMethod != null">
        monitoring_method,
      </if>
      <if test="threshold != null">
        threshold,
      </if>
      <if test="param != null">
        param,
      </if>
      <if test="alarmCondition != null">
        alarm_condition,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="intervalTime != null">
        interval_time,
      </if>
      <if test="needMail != null">
        need_mail,
      </if>
      <if test="isAlarm != null">
        is_alarm,
      </if>
    </trim>
    <trim prefix=" values (" suffix=")" suffixOverrides=",">
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="monitoringMethod != null">
        #{monitoringMethod,jdbcType=VARCHAR},
      </if>
      <if test="threshold != null">
        #{threshold,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="alarmCondition != null">
        #{alarmCondition,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="intervalTime != null">
        #{intervalTime,jdbcType=INTEGER},
      </if>
      <if test="needMail != null">
        #{needMail,jdbcType=BIT},
      </if>
      <if test="isAlarm != null">
        #{isAlarm,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <insert id="batchInsert" parameterType="com.github.tanhao1410.thesis.common.domain.MonitoringItemDO">
    insert into monitoring_item (item_name,device_id,rule_id,monitoring_method,threshold,param,alarm_condition,level,interval_time,need_mail,is_alarm ) values 
    <foreach collection="list" index="index" item="item" separator=",">
       (#{item.itemName,jdbcType=VARCHAR},#{item.deviceId,jdbcType=BIGINT},#{item.ruleId,jdbcType=BIGINT},#{item.monitoringMethod,jdbcType=VARCHAR},#{item.threshold,jdbcType=VARCHAR},#{item.param,jdbcType=VARCHAR},#{item.alarmCondition,jdbcType=VARCHAR},#{item.level,jdbcType=INTEGER},#{item.intervalTime,jdbcType=INTEGER},#{item.needMail,jdbcType=BIT},#{item.isAlarm,jdbcType=BIT} ) 
    </foreach>
  </insert>
  <select id="batchSelectByPrimaryKey" parameterType="java.util.List" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from monitoring_item where id in
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       ${item} 
    </foreach>
  </select>
  <insert id="insertIgnoreSelective" parameterType="com.github.tanhao1410.thesis.common.domain.MonitoringItemDO">
    insert ignore into monitoring_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemName != null">
        item_name,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="monitoringMethod != null">
        monitoring_method,
      </if>
      <if test="threshold != null">
        threshold,
      </if>
      <if test="param != null">
        param,
      </if>
      <if test="alarmCondition != null">
        alarm_condition,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="intervalTime != null">
        interval_time,
      </if>
      <if test="needMail != null">
        need_mail,
      </if>
      <if test="isAlarm != null">
        is_alarm,
      </if>
    </trim>
    <trim prefix=" values (" suffix=")" suffixOverrides=",">
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="monitoringMethod != null">
        #{monitoringMethod,jdbcType=VARCHAR},
      </if>
      <if test="threshold != null">
        #{threshold,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="alarmCondition != null">
        #{alarmCondition,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="intervalTime != null">
        #{intervalTime,jdbcType=INTEGER},
      </if>
      <if test="needMail != null">
        #{needMail,jdbcType=BIT},
      </if>
      <if test="isAlarm != null">
        #{isAlarm,jdbcType=BIT},
      </if>
    </trim>
  </insert>
</mapper>